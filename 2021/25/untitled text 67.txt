import numpy as np

f = open("test.txt","r")
lines = f.readlines()
n = len(lines)
for i,line in enumerate(lines):
  lines[i] = lines[i].rstrip('\n')
  lines[i] = lines[i].replace('.', '0')
  lines[i] = lines[i].replace('>', '1')
  lines[i] = lines[i].replace('v', '2')
  lines[i] = ','.join(list(lines[i]))

array_str = ','.join(lines)

a = np.fromstring(array_str, sep=',')
a = np.reshape(a, (-1, n))

m0 = (a == 0)
m1 = (a == 1)
m2 = (a == 2)

a = [[]*

def rule(a,r,c):
  if a[r][c] == '.' and a[r][c-1] == '>':
    return '>'
  else:
    return '.'

  if a[r][c] == '>' and a[r][c+1] == '.':
    return '.'
  else:
    return '>'

  if a[r][c] == 'v':
    return 'v'
    
    
# Read in the input
# Make the array
# Step the array
# Check for change
# if no change, stop
# output number of steps

in_row  = list('>..>...')
print(''.join(in_row))
for j in range(10):
 out_row = list('.......')
 for i in range(1,len(in_row)):
   if in_row[i] == '.' and in_row[i-1] == '>':
     out_row[i] = '>'
     out_row[i-1] = '.'
   else:
     out_row[i] = in_row[i]
 in_row = out_row
 print(''.join(out_row))
 
 
in_row  = list('v..v...')
print(''.join(in_row))
for j in range(10):
 out_row = list('.......')
 for i in range(1,len(in_row)):
   if in_row[i] == '.' and in_row[i-1] == 'v':
     out_row[i] = 'v'
     out_row[i-1] = '.'
   else:
     out_row[i] = in_row[i]
 in_row = out_row
 print(''.join(out_row))
 


import numpy as np

f = open("test.txt","r")
lines = f.readlines()
n = len(lines)
for i,line in enumerate(lines):
  lines[i] = lines[i].rstrip('\n')
  lines[i] = lines[i].replace('.', '0')
  lines[i] = lines[i].replace('>', '1')
  lines[i] = lines[i].replace('v', '2')
  lines[i] = ','.join(list(lines[i]))

a = np.fromstring(lines[0], sep=',')
for i in range(1, len(lines)):
 a = np.vstack([a, np.fromstring(lines[i], sep=',')])

num_rows = np.shape(a)[0]
num_cols = np.shape(a)[1]
 
 
def extract_row(a_np,r_idx):
  return a_np[r_idx, :]
  
def extract_col(a_np,c_idx):
  return a_np[:, c_idx]
  
def convert_np_to_str(r_np):
  str = np.array2string(r_np).replace('.','').replace(' ','').replace('[','').replace(']','')
  str = str.replace('0','.').replace('1','>').replace('2','v')
  return str
  
def convert_str_to_np(r_str):
  r_str = ','.join(list(r_str))
  r_str = r_str.replace('.','0').replace('>','1').replace('v','2')
  return np.fromstring(r_str, sep=',')
  
def step_row(r_str, ch):
  in_row  = list(r_str)
  out_row = ['.'] * len(in_row)
  for i in range(1,len(in_row)):
    if in_row[i] == '.' and in_row[i-1] == ch:
      out_row[i] = ch
      out_row[i-1] = '.'
    else:
      out_row[i] = in_row[i]
  in_row = out_row
  return(''.join(out_row))
  

step_row(convert_np_to_str(extract_col(a, 2)),'v')
step_row(convert_np_to_str(extract_row(a, 1)),'>')
